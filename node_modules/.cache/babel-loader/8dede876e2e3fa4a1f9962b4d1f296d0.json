{"ast":null,"code":"import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Divider, Grid, Header, Icon, Image, Menu } from \"semantic-ui-react\";\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass RowChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        skill: \"CSS\",\n        value: 80\n      }, {\n        skill: \"HTML\",\n        value: 70\n      }, {\n        skill: \"JS\",\n        value: 85\n      }, {\n        skill: \"ANGULAR\",\n        value: 90\n      }, {\n        skill: \"REACT\",\n        value: 75\n      }, {\n        skill: \"D3\",\n        value: 70\n      }, {\n        skill: \"NODE JS\",\n        value: 65\n      }, {\n        skill: \"JAVA\",\n        value: 65\n      }, {\n        skill: \"UI DESIGN\",\n        value: 70\n      }, {\n        skill: \"XD\",\n        value: 65\n      }],\n      yAxisAttribute: \"skill\",\n      xAxisAttribute: \"value\",\n      width: 0,\n      height: 0\n    };\n    this.chartRef = React.createRef();\n  }\n\n  drawChart() {\n    let margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 90\n    },\n        width = this.state.width - margin.left - margin.right,\n        height = this.state.height - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    let svg = d3.select(\".rowChart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Add X axis\n\n    let x = d3.scaleLinear().domain([0, 100]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").attr('class', 'axis x').call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\"); // Add Y axis\n\n    let y = d3.scaleBand().range([0, height]).domain(this.state.data.map(d => d[this.state.yAxisAttribute])).padding(.1);\n    svg.append(\"g\").attr('class', 'axis y').call(d3.axisLeft(y)).selectAll(\"text\").attr(\"dy\", null); // Add Bars\n\n    svg.selectAll(\"myRect\").data(this.state.data).enter().append(\"rect\").on('mouseover', function () {\n      d3.select(this).style('opacity', 0.5);\n    }).on('mouseout', function () {\n      d3.select(this).style('opacity', 1);\n    }).attr(\"x\", x(0)).attr(\"y\", d => y(d[this.state.yAxisAttribute])).attr(\"width\", 0).attr(\"height\", y.bandwidth() - 10).attr(\"fill\", \"#DF337D\").transition(d3.transition().duration(1000)).attr(\"width\", d => x(d[this.state.xAxisAttribute]));\n  }\n\n  componentDidMount() {\n    this.drawChart();\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n}\n\nexport default RowChart;","map":{"version":3,"sources":["/Users/shinekaabarnett/Columbia/Data Analytics Bootcamp/Group Projects/Group Project #2/ConEd-Gas-Leaks-Project/src/RowChart.js"],"names":["React","Component","Button","Divider","Grid","Header","Icon","Image","Menu","d3","RowChart","constructor","props","state","data","skill","value","yAxisAttribute","xAxisAttribute","width","height","chartRef","createRef","drawChart","margin","top","right","bottom","left","svg","select","append","attr","x","scaleLinear","domain","range","call","axisBottom","selectAll","style","y","scaleBand","map","d","padding","axisLeft","enter","on","bandwidth","transition","duration","componentDidMount","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Button,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Menu\n} from \"semantic-ui-react\";\nimport './App.css';\nimport * as d3 from \"d3\";\n\nclass RowChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [{skill: \"CSS\", value: 80},{skill: \"HTML\", value: 70},{skill: \"JS\", value: 85},{skill: \"ANGULAR\", value: 90},{skill: \"REACT\", value: 75},{skill: \"D3\", value: 70},{skill: \"NODE JS\", value: 65},{ skill: \"JAVA\", value: 65},{skill: \"UI DESIGN\", value: 70},{skill: \"XD\", value: 65}],\n            yAxisAttribute: \"skill\",\n            xAxisAttribute: \"value\",\n            width: 0,\n            height: 0,\n        }\n        this.chartRef = React.createRef();\n    }\n    drawChart() {\n        let margin = {top: 20, right: 30, bottom: 40, left: 90},\n                    width = this.state.width - margin.left - margin.right,\n                    height = this.state.height - margin.top - margin.bottom;\n        // append the svg object to the body of the page\n        let svg = d3.select(\".rowChart\")\n                .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        // Add X axis\n        let x = d3.scaleLinear()\n                .domain([0, 100])\n                .range([ 0, width]);\n        svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .attr('class','axis x')\n                .call(d3.axisBottom(x))\n                .selectAll(\"text\")\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n                .style(\"text-anchor\", \"end\");\n        // Add Y axis\n        let y = d3.scaleBand()\n                .range([ 0, height ])\n                .domain(this.state.data.map((d) =>  d[this.state.yAxisAttribute]))\n                .padding(.1);\n        svg.append(\"g\")\n                .attr('class','axis y')\n                .call(d3.axisLeft(y))\n                .selectAll(\"text\")\n                .attr(\"dy\", null)\n        // Add Bars\n        svg.selectAll(\"myRect\")\n                .data(this.state.data)\n                .enter()\n                .append(\"rect\")\n                .on('mouseover', function(){\n                    d3.select(this).style('opacity', 0.5)\n                 })\n                .on('mouseout', function(){\n                    d3.select(this).style('opacity', 1)\n                 })\n                .attr(\"x\", x(0) )\n                .attr(\"y\", (d) => y(d[this.state.yAxisAttribute]))\n                .attr(\"width\", 0)\n                .attr(\"height\", y.bandwidth() -10 )\n                .attr(\"fill\", \"#DF337D\")\n                .transition(d3.transition().duration(1000))\n                .attr(\"width\", (d) => x(d[this.state.xAxisAttribute]))\n        }\n        componentDidMount() {\n            this.drawChart();    this.drawChart = this.drawChart.bind(this);\n        }\n    \n\n}\n\n\nexport default RowChart;"]},"metadata":{},"sourceType":"module"}